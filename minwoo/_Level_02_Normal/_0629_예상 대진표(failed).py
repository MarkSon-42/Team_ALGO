#  예상 대진표 (토너먼트?)
# tournament

# 1, 2, 3, 4, 5, 6, 7, 8, 9 ...
# 2 4 5 7 9 10.... -> 1 2 3 4 5 6 ...
# "서로 붙기 전까지는 항상 이긴다."

# par : N, A, B, answer

# def sol(8, 4, 7) = 3
#
# 1 2 3 4 5 6 7 8
#
# 4 ,7
#
# 1 2  3 4  5 6  7 8 (1)
#
# 1  4  5  7 (2)
#
# 4  7  (3)

# 밑이 2인 지수함수 혹은 역함수인 로그함수와 관련된것 같음..
# 2의 제곱, 내지는 제곱근...?

# 8 -> 4 2 1 (1이 될때까지 3번)

# 하지만 a, b가 얼마나 인접하느냐가 관건임 a = 1, b = 2인 경우에는
# 첫 라운드때 바로 만나게 된다.
# 그러니까 토너먼트 식으로 짝을 지을때 a, b는 얼마만큼의 라운드 떨어져 있는지...?

# 4 & 7   -> 1 2 3 4 5 6 7 8

# 7 - 4 = 3 ( < 2**2)

#

#  1,2   3,4    5,6   ... n-1, n

#

def solution(n, a, b):
    answer = 0
    dist = abs(a - b)
    for i in range(1, 21):
        if 2**i <= dist < 2**(i + 1):
            answer = dist
            break
    return answer

