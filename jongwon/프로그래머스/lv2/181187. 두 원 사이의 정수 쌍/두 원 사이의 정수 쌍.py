# sliding window 방식 응용
# 해당 x좌표에서 가질 수 있는 y좌표의 최소, 최대 정수 값을 구하기
# y축만을 돌면서 좌표 찾는 방식 -> x 좌표 까지 고려를 하면 y좌표가 0일때 중복이 되기 때문에
# 1사분면 위에서 점의 개수를 찾고, 총 4개의 사분면이므로 결과에 * 4
# r2(max_y)와 r1(min_y) 사이의 있는 값들은 모두 정수 값이기 때문에 그 값들을 결과로 반환 -> 경계값을 정해놔서 사이값들을 결과로 반환
def solution(r1, r2):
    spot = 0
    min_y = r1
    max_y = r2
    
    for x in range(0,r2): # 세로로 x 값을 움직이면서 검사, x값이 커지면은 max_y, min_y가 작아짐
        # max_y를 줄이면서 범위를 줄인다. -> 반지름보다 max_y가 크면 : 점이 원 밖을 나가면 max_y를 줄여서 탐색 -> 큰 원 밖을 나가면 안되기 때문에 y값을 줄여서 큰 원 안에서 탐색
        while r2 ** 2 < max_y ** 2 + x ** 2:
            max_y -= 1
        
        while min_y - 1 and r1 ** 2 <= (min_y-1)**2 + x**2: # min_y이 양수이고(0일때는 중복때문에 경우를 뺏기 때문에 0일때는 탈출), min_y에서 1을 줄여도 반지름보다 크면 : 작은 원 밖에 있는 점이라면 세기, min_y가 양수일때만 점 세기(1사분면 위에서)
            min_y -= 1
        
        spot += max_y - min_y + 1 # 각 x좌표에 대한 min_y ~ max_y의 y좌표 더해주기
    return spot * 4
    